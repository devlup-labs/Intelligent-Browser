# yaml files are readeable format like json and simpler as compared to it also indentation based
# > will ignnore line breaks side by side , | maintians exact same formatting 
planner_task:
  agent: planner_agent
  description: >
    Analyze the {{user_request}} and create a structured multi-agent plan using only the allowed agent list.
    Follow the format and reasoning style shown in the example outputs. Do not invent agent names. 
    The output must include a thought process, a task name, agent assignments, and dependency structure. 
    You must also format the `nodes` correctly using input/output/foreach/watch blocks where applicable.
    The output language should follow the language corresponding to the user's task.
    Only use agents from this list: {{agents_list}}

    Refer to the examples from the following list: 
    {{examples_list}}
    
    

  expected_output: |
    A JSON-like dictionary following the structure:
    {
        "root": {
            "name": "Task Name",
            "thought": "Your thought process on user demand planning",
            "agents": [
                {
                    "name": "Agent name",
                    "id": 0,
                    "dependsOn": "",
                    "task": "current agent task",
                    "nodes": [
                        "Complete the corresponding step nodes of the task",
                        {"input": "variable name", "description": "..."},
                        {"output": "variable name", "description": "..."},
                        {"forEach": "list or variable name", "steps": ["forEach step node"]},
                        {
                            "watch": {
                                "event": "dom",
                                "loop": True,
                                "description": "Monitor task description",
                                "trigger": ["Trigger step node"]
                            }
                        }
                    ]
                      
                }
            ]
        }
    }
  input_variables:
    - user_request
    - agents_list
    - examples_list

execution_task:
    agent: executor_agent
    description: >
      Execute a single step provided by the planner agent. Focus on completing
      only the current step without looking ahead to future steps. Use available
      tools and resources to accomplish the specific objective. Provide clear
      feedback on the execution result to help the planner adapt subsequent steps.
  
    expected_output: >
      A concise execution result in the following format:
    
      STATUS: [SUCCESS/FAILURE/PARTIAL_FAILURE]
    
      For SUCCESS status:
      - Brief confirmation of task completion
      - Key outputs or results achieved
    
      For FAILURE status:
      - Clear explanation of what went wrong
      - Specific error details or obstacles encountered
      - What was attempted before failure
      - Suggestions for the planner to modify the approach
    
      For PARTIAL_FAILURE status:
      - What parts were completed successfully
      - What parts failed and why
      - Current state of the task
      - What the planner should adjust for the next step
    
      Keep the response focused and actionable for planner feedback.

    context_from_planner: true
    allow_delegation: false
    human_input: false
    max_execution_time: 30

    output_json: |
    {
      "status": "SUCCESS|FAILURE|PARTIAL_FAILURE",
      "step_description": "brief description of attempted step",
      "result_summary": "concise summary of what happened",
      "error_details": "detailed explanation if status is not SUCCESS",
      "suggestions_for_planner": "recommendations for next step adaptation",
      "outputs_created": ["list of any files/results produced"],
      "next_step_context": "any important context for the next step"
    }
  
    validation_criteria:
      - "Single step execution attempted"
      - "Clear status provided (SUCCESS/FAILURE/PARTIAL_FAILURE)"
      - "Appropriate feedback given for planner adaptation"
      - "Response is concise and actionable"